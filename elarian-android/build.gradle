
apply plugin: 'maven-publish'
apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

group properties.getProperty("maven.groupId")
version properties.getProperty("maven.version")

String protobufVersion = "3.15.5"

android {
    compileSdkVersion 30
    defaultConfig {
        consumerProguardFiles "proguard-rules.txt"
        minSdkVersion 27
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions { abortOnError false }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude "META-INF/INDEX.LIST"
        exclude "META-INF/io.netty.versions.properties"
    }
}

configurations.embed.transitive = true

dependencies {
    api "com.google.protobuf:protobuf-javalite:$protobufVersion"
    api 'io.rsocket:rsocket-core:1.1.0'
    api 'io.rsocket:rsocket-transport-netty:1.1.0'
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    failOnError = false
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions {
    doLast {
        println project.getConvention()
    }
}
afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId maven_group_id
                artifactId project.name
                version project.version
                from components.release
                pom {
                    name = 'Elarian'
                    description = 'Convenient access to the Elarian APIs from applications written in Kotlin, Java, and Scala.'
                    url = 'https://developers.elarian.com'
                    properties = []
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://raw.githubusercontent.com/ElarianLtd/java-sdk/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'aksalj'
                            name = 'Salama AB'
                            email = 'salama@elarian.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:ElarianLtd/java-sdk.git'
                        url = 'https://github.com/ElarianLtd/java-sdk'
                    }
                }
            }
        }
        repositories {
            maven {
                credentials {
                    username maven_username
                    password maven_password
                }
                url maven_url
            }
        }
    }
}
