Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

group properties.getProperty("maven.groupId")
version properties.getProperty("maven.version")

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.adarshr.test-logger'

dependencies {
    compile(project(':elarian-common'))
    implementation(project(':elarian-hera'))
    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.awaitility:awaitility:4.0.3')
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

task testEnvVar {
    doLast {
        exec {
            file("${project.rootDir}/.env").readLines().each() {
                def (key, value) = it.tokenize('=')
                environment key, value
            }
        }
    }
}

test {
    useJUnitPlatform()

    maxParallelForks 1

    testlogger {
        theme 'mocha'
        slowThreshold 5000
        showSimpleNames true
        showExceptions true
        showStackTraces true
        showFullStackTraces true
        showCauses true
        logLevel 'debug'
        showStandardStreams true
    }
}

test.dependsOn("testEnvVar")


jar {
    manifest {
        attributes 'Implementation-Title': 'Elarian SDK',
                'Implementation-Version': version
    }
}

def exportedProjects = [
    ":elarian-common",
    ":elarian-core",
]

task javadoc(overwrite: true, type: Javadoc) {
    destinationDir = new File("${project.rootDir}/docs")
    source exportedProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
    title = "Elarian Java SDK"
    options {
        links "http://docs.oracle.com/javase/8/docs/api/"
        addBooleanOption('html5', true)
    }
}

shadowJar {
    classifier = null // Avoid classifiers for now...
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
            groupId maven_group_id
            artifactId project.name
            version project.version
            pom {
                name = 'Elarian'
                description = 'Convenient access to the Elarian APIs from applications written in Kotlin, Java, and Scala.'
                url = 'https://developers.elarian.com'
                properties = []
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://raw.githubusercontent.com/ElarianLtd/java-sdk/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'aksalj'
                        name = 'Salama AB'
                        email = 'salama@elarian.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:ElarianLtd/java-sdk.git'
                    url = 'https://github.com/ElarianLtd/java-sdk'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username maven_username
                password maven_password
            }
            url maven_url
        }
    }
}